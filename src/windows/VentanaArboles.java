/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package windows;


import Database.Arbol.ArbolDao;
import Database.Arbol.ArbolModel;
import Database.Asignacion.AsignacionGrafDao;
import grafos.Grafo;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Toloza XD
 */
public class VentanaArboles extends JFrame {

    private SimuladorArbolBinario simulador = new SimuladorArbolBinario();
    private JButton buttonInOrden;
    private JButton buttonPostOrden;
    private JButton buttonPreOrden;
    private JButton botonInsertar;
    private JTextArea impresion;
    private JDesktopPane jDesktopPane1;
    private JInternalFrame jInternalFrame2;
    private JPanel jPanel2;
    private JScrollPane jScrollPane1;
    private JComboBox combodato;

    private JButton button1;
    private JButton button2;
    private JButton button3;
    int index = 0;
    /**
     * Creates new form Vista
     */
    public VentanaArboles() {
        initComponents();
        this.inicializar(false);


    }

    private void inicializar(boolean enable) {
        this.buttonInOrden.setEnabled(enable);
        this.buttonPostOrden.setEnabled(enable);
        this.buttonPreOrden.setEnabled(enable);


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {


        jPanel2 = new JPanel();
        jScrollPane1 = new JScrollPane();
        impresion = new JTextArea();
        jDesktopPane1 = new JDesktopPane();
        jInternalFrame2 = new JInternalFrame();
        botonInsertar = new JButton();
        buttonInOrden = new JButton();
        buttonPreOrden = new JButton();
        buttonPostOrden = new JButton();

        String[]listaCombo= {"RANDOMIZAR","CARGAR DATOS", "GUARDAR DATOS","ATRAS"};
        combodato = new JComboBox(listaCombo);

        button1 = new JButton();
        button2 = new JButton();
        button3 = new JButton();

        setTitle("ARBOLES");
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Panel de Pruebas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10))); // NOI18N
        jPanel2.setOpaque(false);

        jScrollPane1.setOpaque(false);

        impresion.setEditable(false);
        impresion.setColumns(20);
        impresion.setFont(new Font("Tahoma", 0, 12)); // NOI18N
        impresion.setRows(5);
        impresion.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados de operaciones"));
        impresion.setOpaque(false);
        jScrollPane1.setViewportView(impresion);

        jDesktopPane1.setOpaque(false);

        jInternalFrame2.setIconifiable(true);
        jInternalFrame2.setMaximizable(true);
        jInternalFrame2.setResizable(true);
        jInternalFrame2.setEnabled(false);
        jInternalFrame2.setFocusCycleRoot(false);
        jInternalFrame2.setVisible(true);


        combodato.setBackground(new Color(21, 88, 16));
        combodato.setForeground(Color.WHITE);
        combodato.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int ob=combodato.getSelectedIndex();
                System.out.println(ob);
                ejecutarMetodoCombo(ob);
            }
        });

        javax.swing.GroupLayout jInternalFrame2Layout = new javax.swing.GroupLayout(jInternalFrame2.getContentPane());
        jInternalFrame2.getContentPane().setLayout(jInternalFrame2Layout);
        jInternalFrame2Layout.setHorizontalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 584, Short.MAX_VALUE)
        );
        jInternalFrame2Layout.setVerticalGroup(
            jInternalFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );

        jDesktopPane1.add(jInternalFrame2);
        jInternalFrame2.setBounds(10, 10, 600, 320);

        botonInsertar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonInsertar.setText("INSERTAR");
        botonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonInsertarActionPerformed(evt);
            }
        });
        botonInsertar.setForeground(Color.WHITE);
        botonInsertar.setFont(new Font("Nirmala UI Semilight", Font.BOLD, 13));
        botonInsertar.setBackground(new Color(21, 88, 16));

        buttonInOrden.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        buttonInOrden.setText("InOrder");
        buttonInOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InOrdenActionPerformed(evt);
            }
        });
        buttonInOrden.setForeground(Color.WHITE);
        buttonInOrden.setFont(new Font("Nirmala UI Semilight", Font.BOLD, 13));
        buttonInOrden.setBackground(new Color(21, 88, 16));


        buttonPreOrden.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        buttonPreOrden.setText("PreOrden");
        buttonPreOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreOrdenActionPerformed(evt);
            }
        });
        buttonPreOrden.setForeground(Color.WHITE);
        buttonPreOrden.setFont(new Font("Nirmala UI Semilight", Font.BOLD, 13));
        buttonPreOrden.setBackground(new Color(21, 88, 16));

        buttonPostOrden.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        buttonPostOrden.setText("PostOrder");
        buttonPostOrden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostOrdenActionPerformed(evt);
            }
        });
        buttonPostOrden.setForeground(Color.WHITE);
        buttonPostOrden.setFont(new Font("Nirmala UI Semilight", Font.BOLD, 13));
        buttonPostOrden.setBackground(new Color(21, 88, 16));


        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(buttonInOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(4, 4, 4)
                                .addComponent(buttonPreOrden)
                                .addGap(4, 4, 4))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(combodato, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botonInsertar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(buttonPostOrden, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 616, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 3, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonInsertar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(combodato, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonInOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonPreOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonPostOrden, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))



                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ejecutarMetodoCombo(int ob) {
        switch (ob){
            case 0:
                String srtNumber = JOptionPane.showInputDialog("Ingrese la cantidad de numeros a randomizar");

                JTextField tfLim1 = new JTextField();
                JTextField tfLim2 = new JTextField();

                Object[] fieldsOrigen ={
                        new JLabel("Limite inferior"),
                        tfLim1,
                        new JLabel("Limite superior"),
                        tfLim2
                };
                JOptionPane.showConfirmDialog(null,fieldsOrigen,
                        "INGRESE LIMITES", JOptionPane.OK_CANCEL_OPTION);

                int size = Integer.parseInt(srtNumber);
                int lim1 = Integer.parseInt(tfLim1.getText());
                int lim2 = Integer.parseInt(tfLim2.getText());
                System.out.println("RANDOM");
                this.simulador.eliminar();
                repintarArbol();

                for(int i=0;i<size;i++){
                    int randNumber = (int)(Math.random()*(lim2-lim1+1)+lim1);
                    this.simulador.insertar(randNumber);

                }
                inicializar(true);
                JOptionPane.showMessageDialog(null, "SE HAN GENERADO DATOS ALEATORIAMENTE");


                break;
            case 1:

                System.out.println("CARGAR");
                ArrayList<ArbolModel> lista = ArbolDao.getListArboles();
                String[]listaCombo= new String[lista.size()];
                for(int i=0;i<lista.size();i++) {
                    listaCombo[i] = lista.get(i).getNombre();
                }

                JComboBox comboBox = new JComboBox(listaCombo);
                comboBox.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        int ob=comboBox.getSelectedIndex();
                        for(int i=0;i<lista.size();i++) {
                            if(ob==i) {
                                simulador.eliminar();
                                repintarArbol();
                                index = ob;

                            }
                        }
                        System.out.println("SELECCIONADO: "+index);
                        String cad[]=lista.get(index).getDataArbol().split(",");
                        for(int i=0;i<cad.length;i++){
                            int number = Integer.parseInt(cad[i]);
                            simulador.insertar(number);
                        }

                    }
                });
                inicializar(true);
                comboBox.setBounds(88, 62, 177, 20);
                JOptionPane.showMessageDialog(null, comboBox, "SELECCIONE UN ARCHIVO", 1);


                break;
            case 2:

                String nombre = JOptionPane.showInputDialog("Ingrese un nombre de archivo");

                ArrayList<String> listaDatos = this.simulador.lista;
                String cadena = "";
                for(int i=0;i<listaDatos.size();i++){
                    if(i==listaDatos.size()-1){
                        cadena+=listaDatos.get(i);
                    }else{
                        cadena+=listaDatos.get(i)+",";
                    }
                }
                ArbolModel arbolModel = new ArbolModel();
                arbolModel.setNombre(nombre);
                arbolModel.setDataArbol(cadena);

                try{
                    ArbolDao.insertSort(arbolModel);
                    JOptionPane.showMessageDialog(null,"SE HA GUARDADO LOS DATOS");
                }catch (Exception e){
                    JOptionPane.showMessageDialog(null,"HA OCURRIDO UN ERROR");
                }

                break;
            case 3:
                VentanaPrincipal window = new VentanaPrincipal();
                window.frame.setLocationRelativeTo(null);
                window.frame.setVisible(true);
                dispose();
                break;
        }
    }

    private void botonInsertarActionPerformed(ActionEvent evt) {//GEN-FIRST:event_botonInsertarActionPerformed
        try {
            String strDato = JOptionPane.showInputDialog("Ingrese un dato numerico");
            int dato = Integer.parseInt(strDato);
            //int dato = Integer.parseInt(txtdato.getText());
            if (this.simulador.insertar(dato)) {
                JOptionPane.showMessageDialog(null, "El dato fue insertado correctamente", " ...", 1);
                this.inicializar(true);
                
                complementos();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "No se pudo insertar el dato", "Intenta de nuevo...", 0);

        }
    }//GEN-LAST:event_botonInsertarActionPerformed

    private void InOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InOrdenActionPerformed
        // TODO add your handling code here:
        String recorrido = null;
        recorrido = this.simulador.inOrden();
        
        this.impresion.setText("");
        this.impresion.setText(recorrido);
    }//GEN-LAST:event_InOrdenActionPerformed

    private void PreOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreOrdenActionPerformed
        // TODO add your handling code here:
        String recorrido = null;
        recorrido = this.simulador.preOrden();
        
        this.impresion.setText("");
        this.impresion.setText(recorrido);
    }//GEN-LAST:event_PreOrdenActionPerformed

    private void PostOrdenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostOrdenActionPerformed
        // TODO add your handling code here:
        String recorrido = null;
        recorrido = this.simulador.postOrden();
        
        this.impresion.setText("");
        this.impresion.setText(recorrido);
    }//GEN-LAST:event_PostOrdenActionPerformed

    public void complementos(){
        this.repintarArbol();
    }
    private void repintarArbol() {
        this.jDesktopPane1.removeAll();
        Rectangle tamano = this.jInternalFrame2.getBounds();
        this.jInternalFrame2 = null;
        this.jInternalFrame2 = new JInternalFrame("Representación gráfica", true);
        this.jInternalFrame2.setForeground(Color.WHITE);
        this.jDesktopPane1.add(this.jInternalFrame2, JLayeredPane.DEFAULT_LAYER);
        this.jInternalFrame2.setVisible(true);
        this.jInternalFrame2.setBounds(tamano);
        this.jInternalFrame2.setEnabled(false);
        this.jInternalFrame2.add(this.simulador.getDibujo(), BorderLayout.CENTER);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //</editor-fold>
        //</editor-fold>
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaArboles.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaArboles().setVisible(true);
            }
        });
    }

}
